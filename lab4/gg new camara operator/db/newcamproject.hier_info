|newcamproject
clock => cameramanager:manage.clk
clock => count[0].CLK
clock => count[1].CLK
clock => count[2].CLK
clock => count[3].CLK
clock => count[4].CLK
clock => load~reg0.CLK
clock => temppi2[0].CLK
clock => temppi2[1].CLK
clock => temppi2[2].CLK
clock => temppi2[3].CLK
clock => temppi2[4].CLK
clock => temppi2[5].CLK
clock => temppi2[6].CLK
clock => temppi2[7].CLK
clock => temppi1[0].CLK
clock => temppi1[1].CLK
clock => temppi1[2].CLK
clock => temppi1[3].CLK
clock => temppi1[4].CLK
clock => temppi1[5].CLK
clock => temppi1[6].CLK
clock => temppi1[7].CLK
reset => cameramanager:manage.reset
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
bicS[0] => Equal4.IN3
bicS[1] => Equal4.IN1
bicS[2] => Equal4.IN0
bicS[3] => Equal4.IN2
dataIn[0] => Equal0.IN7
dataIn[0] => Equal1.IN4
dataIn[0] => Equal2.IN3
dataIn[1] => Equal0.IN6
dataIn[1] => Equal1.IN3
dataIn[1] => Equal2.IN7
dataIn[2] => Equal0.IN2
dataIn[2] => Equal1.IN7
dataIn[2] => Equal2.IN6
dataIn[3] => Equal0.IN1
dataIn[3] => Equal1.IN2
dataIn[3] => Equal2.IN2
dataIn[4] => Equal0.IN5
dataIn[4] => Equal1.IN1
dataIn[4] => Equal2.IN1
dataIn[5] => Equal0.IN4
dataIn[5] => Equal1.IN6
dataIn[5] => Equal2.IN5
dataIn[6] => Equal0.IN3
dataIn[6] => Equal1.IN5
dataIn[6] => Equal2.IN4
dataIn[7] => Equal0.IN0
dataIn[7] => Equal1.IN0
dataIn[7] => Equal2.IN0
dataOut[0] << dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1] << dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2] << dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3] << dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4] << dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5] << dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[6] << dataOut.DB_MAX_OUTPUT_PORT_TYPE
dataOut[7] << dataOut.DB_MAX_OUTPUT_PORT_TYPE
transmit << Equal5.DB_MAX_OUTPUT_PORT_TYPE
load << load~reg0.DB_MAX_OUTPUT_PORT_TYPE
camData1[0] << cameramanager:manage.datacam1n[0]
camData1[1] << cameramanager:manage.datacam1n[1]
camData1[2] << cameramanager:manage.datacam1n[2]
camData1[3] << cameramanager:manage.datacam1n[3]
camData1[4] << cameramanager:manage.datacam1n[4]
camData1[5] << cameramanager:manage.datacam1n[5]
camData1[6] << cameramanager:manage.datacam1n[6]
camData2[0] << cameramanager:manage.datacam2n[0]
camData2[1] << cameramanager:manage.datacam2n[1]
camData2[2] << cameramanager:manage.datacam2n[2]
camData2[3] << cameramanager:manage.datacam2n[3]
camData2[4] << cameramanager:manage.datacam2n[4]
camData2[5] << cameramanager:manage.datacam2n[5]
camData2[6] << cameramanager:manage.datacam2n[6]
cam1stn[0] << cameramanager:manage.cam1stn[0]
cam1stn[1] << cameramanager:manage.cam1stn[1]
cam1stn[2] << cameramanager:manage.cam1stn[2]
cam1stn[3] << cameramanager:manage.cam1stn[3]
cam1stn[4] << cameramanager:manage.cam1stn[4]
cam1stn[5] << cameramanager:manage.cam1stn[5]
cam2stn[0] << cameramanager:manage.cam2stn[0]
cam2stn[1] << cameramanager:manage.cam2stn[1]
cam2stn[2] << cameramanager:manage.cam2stn[2]
cam2stn[3] << cameramanager:manage.cam2stn[3]
cam2stn[4] << cameramanager:manage.cam2stn[4]
cam2stn[5] << cameramanager:manage.cam2stn[5]


|newcamproject|cameramanager:manage
startsys => cam1star.IN1
downloadresponce1 => camerastate:camera1.DownloadIN
downloadresponce2 => camerastate:camera2.DownloadIN
clk => camerastate:camera1.clk
clk => camerastate:camera2.clk
reset => camerastate:camera1.reset
reset => camerastate:camera2.reset
cam1stn[0] <= camerastate:camera1.lowpowerstate
cam1stn[1] <= camerastate:camera1.standbystate
cam1stn[2] <= camerastate:camera1.activestate
cam1stn[3] <= camerastate:camera1.idlestate
cam1stn[4] <= camerastate:camera1.downloadingstate
cam1stn[5] <= camerastate:camera1.flushstate
cam2stn[0] <= camerastate:camera2.lowpowerstate
cam2stn[1] <= camerastate:camera2.standbystate
cam2stn[2] <= camerastate:camera2.activestate
cam2stn[3] <= camerastate:camera2.idlestate
cam2stn[4] <= camerastate:camera2.downloadingstate
cam2stn[5] <= camerastate:camera2.flushstate
ReToDload1 <= camerastate:camera1.ReadyToDownloadOUT
ReToDload2 <= camerastate:camera2.ReadyToDownloadOUT
datacam1n[0] <= camerastate:camera1.data[0]
datacam1n[1] <= camerastate:camera1.data[1]
datacam1n[2] <= camerastate:camera1.data[2]
datacam1n[3] <= camerastate:camera1.data[3]
datacam1n[4] <= camerastate:camera1.data[4]
datacam1n[5] <= camerastate:camera1.data[5]
datacam1n[6] <= camerastate:camera1.data[6]
datacam2n[0] <= camerastate:camera2.data[0]
datacam2n[1] <= camerastate:camera2.data[1]
datacam2n[2] <= camerastate:camera2.data[2]
datacam2n[3] <= camerastate:camera2.data[3]
datacam2n[4] <= camerastate:camera2.data[4]
datacam2n[5] <= camerastate:camera2.data[5]
datacam2n[6] <= camerastate:camera2.data[6]
buffdataout[0] <= buffdataout.DB_MAX_OUTPUT_PORT_TYPE
buffdataout[1] <= buffdataout.DB_MAX_OUTPUT_PORT_TYPE
buffdataout[2] <= buffdataout.DB_MAX_OUTPUT_PORT_TYPE
buffdataout[3] <= buffdataout.DB_MAX_OUTPUT_PORT_TYPE
buffdataout[4] <= buffdataout.DB_MAX_OUTPUT_PORT_TYPE
buffdataout[5] <= buffdataout.DB_MAX_OUTPUT_PORT_TYPE
buffdataout[6] <= buffdataout.DB_MAX_OUTPUT_PORT_TYPE
buffdataout[7] <= buffdataout.DB_MAX_OUTPUT_PORT_TYPE


|newcamproject|cameramanager:manage|camerastate:camera1
GoToStandbyIN => Selector2.IN12
StartFilmingIN => Selector1.IN15
StartFilmingIN => Selector2.IN1
DownloadIN => ns.OUTPUTSELECT
DownloadIN => ns.OUTPUTSELECT
DownloadIN => ns.OUTPUTSELECT
DownloadIN => Selector2.IN2
DownloadIN => Selector2.IN3
FlushIN => ns.DATAA
clk => countercam:modeldata.clk
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
clk => ps[7].CLK
clk => ps[8].CLK
clk => ps[9].CLK
clk => ps[10].CLK
clk => ps[11].CLK
clk => ps[12].CLK
clk => ps[13].CLK
clk => ps[14].CLK
clk => ps[15].CLK
clk => ps[16].CLK
clk => ps[17].CLK
clk => ps[18].CLK
clk => ps[19].CLK
clk => ps[20].CLK
clk => ps[21].CLK
clk => ps[22].CLK
clk => ps[23].CLK
clk => ps[24].CLK
clk => ps[25].CLK
clk => ps[26].CLK
clk => ps[27].CLK
clk => ps[28].CLK
clk => ps[29].CLK
clk => ps[30].CLK
clk => ps[31].CLK
reset => countercam:modeldata.reset
reset => ps.OUTPUTSELECT
reset => ps.OUTPUTSELECT
reset => ps.OUTPUTSELECT
lowpowerstate <= Equal15.DB_MAX_OUTPUT_PORT_TYPE
standbystate <= Equal16.DB_MAX_OUTPUT_PORT_TYPE
activestate <= activestate.DB_MAX_OUTPUT_PORT_TYPE
idlestate <= Equal20.DB_MAX_OUTPUT_PORT_TYPE
downloadingstate <= Equal21.DB_MAX_OUTPUT_PORT_TYPE
flushstate <= Equal22.DB_MAX_OUTPUT_PORT_TYPE
ForceflushOUT <= Equal23.DB_MAX_OUTPUT_PORT_TYPE
ReadyToDownloadOUT <= ReadyToDownloadOUT.DB_MAX_OUTPUT_PORT_TYPE
GoToStandbyOUT <= Equal24.DB_MAX_OUTPUT_PORT_TYPE
StartFilmingOUT <= Equal25.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= countercam:modeldata.count[0]
data[1] <= countercam:modeldata.count[1]
data[2] <= countercam:modeldata.count[2]
data[3] <= countercam:modeldata.count[3]
data[4] <= countercam:modeldata.count[4]
data[5] <= countercam:modeldata.count[5]
data[6] <= countercam:modeldata.count[6]
buffdata[0] <= countercam:modeldata.buffdata[0]
buffdata[1] <= countercam:modeldata.buffdata[1]
buffdata[2] <= countercam:modeldata.buffdata[2]
buffdata[3] <= countercam:modeldata.buffdata[3]
buffdata[4] <= countercam:modeldata.buffdata[4]
buffdata[5] <= countercam:modeldata.buffdata[5]
buffdata[6] <= countercam:modeldata.buffdata[6]
buffdata[7] <= countercam:modeldata.buffdata[7]


|newcamproject|cameramanager:manage|camerastate:camera1|countercam:modeldata
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => clkdiv2.ENA
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
clk => divided_clocks[0].CLK
clk => divided_clocks[1].CLK
clk => divided_clocks[2].CLK
clk => divided_clocks[3].CLK
clk => divided_clocks[4].CLK
clk => divided_clocks[5].CLK
clk => divided_clocks[6].CLK
clk => divided_clocks[7].CLK
clk => divided_clocks[8].CLK
clk => divided_clocks[9].CLK
clk => divided_clocks[10].CLK
clk => divided_clocks[11].CLK
clk => divided_clocks[12].CLK
clk => divided_clocks[13].CLK
clk => divided_clocks[14].CLK
clk => divided_clocks[15].CLK
clk => divided_clocks[16].CLK
clk => divided_clocks[17].CLK
clk => divided_clocks[18].CLK
clk => divided_clocks[19].CLK
clk => divided_clocks[20].CLK
clk => divided_clocks[21].CLK
clk => divided_clocks[22].CLK
clk => divided_clocks[23].CLK
clk => divided_clocks[24].CLK
clk => divided_clocks[25].CLK
clk => divided_clocks[26].CLK
clk => divided_clocks[27].CLK
clk => divided_clocks[28].CLK
clk => divided_clocks[29].CLK
clk => divided_clocks[30].CLK
clk => divided_clocks[31].CLK
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => buffdata.OUTPUTSELECT
reset => buffdata.OUTPUTSELECT
reset => clkdiv2.ACLR
reset => count[0]~reg0.ACLR
reset => count[1]~reg0.ACLR
reset => count[2]~reg0.ACLR
reset => count[3]~reg0.ACLR
reset => count[4]~reg0.ACLR
reset => count[5]~reg0.ACLR
reset => count[6]~reg0.ACLR
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buffdata[0] <= buffdata.DB_MAX_OUTPUT_PORT_TYPE
buffdata[1] <= <GND>
buffdata[2] <= <GND>
buffdata[3] <= buffdata.DB_MAX_OUTPUT_PORT_TYPE
buffdata[4] <= <GND>
buffdata[5] <= <GND>
buffdata[6] <= <GND>
buffdata[7] <= <GND>


|newcamproject|cameramanager:manage|camerastate:camera2
GoToStandbyIN => Selector2.IN12
StartFilmingIN => Selector1.IN15
StartFilmingIN => Selector2.IN1
DownloadIN => ns.OUTPUTSELECT
DownloadIN => ns.OUTPUTSELECT
DownloadIN => ns.OUTPUTSELECT
DownloadIN => Selector2.IN2
DownloadIN => Selector2.IN3
FlushIN => ns.DATAA
clk => countercam:modeldata.clk
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
clk => ps[3].CLK
clk => ps[4].CLK
clk => ps[5].CLK
clk => ps[6].CLK
clk => ps[7].CLK
clk => ps[8].CLK
clk => ps[9].CLK
clk => ps[10].CLK
clk => ps[11].CLK
clk => ps[12].CLK
clk => ps[13].CLK
clk => ps[14].CLK
clk => ps[15].CLK
clk => ps[16].CLK
clk => ps[17].CLK
clk => ps[18].CLK
clk => ps[19].CLK
clk => ps[20].CLK
clk => ps[21].CLK
clk => ps[22].CLK
clk => ps[23].CLK
clk => ps[24].CLK
clk => ps[25].CLK
clk => ps[26].CLK
clk => ps[27].CLK
clk => ps[28].CLK
clk => ps[29].CLK
clk => ps[30].CLK
clk => ps[31].CLK
reset => countercam:modeldata.reset
reset => ps.OUTPUTSELECT
reset => ps.OUTPUTSELECT
reset => ps.OUTPUTSELECT
lowpowerstate <= Equal15.DB_MAX_OUTPUT_PORT_TYPE
standbystate <= Equal16.DB_MAX_OUTPUT_PORT_TYPE
activestate <= activestate.DB_MAX_OUTPUT_PORT_TYPE
idlestate <= Equal20.DB_MAX_OUTPUT_PORT_TYPE
downloadingstate <= Equal21.DB_MAX_OUTPUT_PORT_TYPE
flushstate <= Equal22.DB_MAX_OUTPUT_PORT_TYPE
ForceflushOUT <= Equal23.DB_MAX_OUTPUT_PORT_TYPE
ReadyToDownloadOUT <= ReadyToDownloadOUT.DB_MAX_OUTPUT_PORT_TYPE
GoToStandbyOUT <= Equal24.DB_MAX_OUTPUT_PORT_TYPE
StartFilmingOUT <= Equal25.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= countercam:modeldata.count[0]
data[1] <= countercam:modeldata.count[1]
data[2] <= countercam:modeldata.count[2]
data[3] <= countercam:modeldata.count[3]
data[4] <= countercam:modeldata.count[4]
data[5] <= countercam:modeldata.count[5]
data[6] <= countercam:modeldata.count[6]
buffdata[0] <= countercam:modeldata.buffdata[0]
buffdata[1] <= countercam:modeldata.buffdata[1]
buffdata[2] <= countercam:modeldata.buffdata[2]
buffdata[3] <= countercam:modeldata.buffdata[3]
buffdata[4] <= countercam:modeldata.buffdata[4]
buffdata[5] <= countercam:modeldata.buffdata[5]
buffdata[6] <= countercam:modeldata.buffdata[6]
buffdata[7] <= countercam:modeldata.buffdata[7]


|newcamproject|cameramanager:manage|camerastate:camera2|countercam:modeldata
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => count.OUTPUTSELECT
up => clkdiv2.ENA
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
down => count.OUTPUTSELECT
clk => divided_clocks[0].CLK
clk => divided_clocks[1].CLK
clk => divided_clocks[2].CLK
clk => divided_clocks[3].CLK
clk => divided_clocks[4].CLK
clk => divided_clocks[5].CLK
clk => divided_clocks[6].CLK
clk => divided_clocks[7].CLK
clk => divided_clocks[8].CLK
clk => divided_clocks[9].CLK
clk => divided_clocks[10].CLK
clk => divided_clocks[11].CLK
clk => divided_clocks[12].CLK
clk => divided_clocks[13].CLK
clk => divided_clocks[14].CLK
clk => divided_clocks[15].CLK
clk => divided_clocks[16].CLK
clk => divided_clocks[17].CLK
clk => divided_clocks[18].CLK
clk => divided_clocks[19].CLK
clk => divided_clocks[20].CLK
clk => divided_clocks[21].CLK
clk => divided_clocks[22].CLK
clk => divided_clocks[23].CLK
clk => divided_clocks[24].CLK
clk => divided_clocks[25].CLK
clk => divided_clocks[26].CLK
clk => divided_clocks[27].CLK
clk => divided_clocks[28].CLK
clk => divided_clocks[29].CLK
clk => divided_clocks[30].CLK
clk => divided_clocks[31].CLK
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => buffdata.OUTPUTSELECT
reset => buffdata.OUTPUTSELECT
reset => clkdiv2.ACLR
reset => count[0]~reg0.ACLR
reset => count[1]~reg0.ACLR
reset => count[2]~reg0.ACLR
reset => count[3]~reg0.ACLR
reset => count[4]~reg0.ACLR
reset => count[5]~reg0.ACLR
reset => count[6]~reg0.ACLR
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
buffdata[0] <= buffdata.DB_MAX_OUTPUT_PORT_TYPE
buffdata[1] <= <GND>
buffdata[2] <= <GND>
buffdata[3] <= buffdata.DB_MAX_OUTPUT_PORT_TYPE
buffdata[4] <= <GND>
buffdata[5] <= <GND>
buffdata[6] <= <GND>
buffdata[7] <= <GND>


