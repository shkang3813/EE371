
Cameras.elf:     file format elf32-littlenios2
Cameras.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00008020

Program Header:
    LOAD off    0x00001000 vaddr 0x00008000 paddr 0x00008000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00008020 paddr 0x00008020 align 2**12
         filesz 0x00000ed0 memsz 0x00000ed0 flags r-x
    LOAD off    0x00001ef0 vaddr 0x00008ef0 paddr 0x0000904c align 2**12
         filesz 0x0000015c memsz 0x0000015c flags rw-
    LOAD off    0x000021a8 vaddr 0x000091a8 paddr 0x000091a8 align 2**12
         filesz 0x00000000 memsz 0x00000010 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00008000  00008000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000000  00008020  00008020  0000204c  2**0
                  CONTENTS
  2 .text         00000e74  00008020  00008020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000005c  00008e94  00008e94  00001e94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       0000015c  00008ef0  0000904c  00001ef0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000010  000091a8  000091a8  000021a8  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_mem   00000000  000091b8  000091b8  0000204c  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0000204c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000310  00000000  00000000  00002070  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000040f1  00000000  00000000  00002380  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000016d5  00000000  00000000  00006471  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000018ca  00000000  00000000  00007b46  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000042c  00000000  00000000  00009410  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00001120  00000000  00000000  0000983c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000142f  00000000  00000000  0000a95c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  0000bd8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000288  00000000  00000000  0000bdb0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0000d2c6  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0000d2c9  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0000d2cc  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0000d2cd  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0000d2ce  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0000d2d2  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0000d2d6  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0000d2da  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0000d2e3  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0000d2ec  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0000d2f5  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000028  00000000  00000000  0000d307  2**0
                  CONTENTS, READONLY
 29 .jdi          00003f63  00000000  00000000  0000d32f  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0008dd3b  00000000  00000000  00011292  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00008000 l    d  .entry	00000000 .entry
00008020 l    d  .exceptions	00000000 .exceptions
00008020 l    d  .text	00000000 .text
00008e94 l    d  .rodata	00000000 .rodata
00008ef0 l    d  .rwdata	00000000 .rwdata
000091a8 l    d  .bss	00000000 .bss
000091b8 l    d  .onchip_mem	00000000 .onchip_mem
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Cameras_bsp//obj/HAL/src/crt0.o
00008058 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 camera_system.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
00008314 l     F .text	0000006c print_repeat
00000000 l    df *ABS*	00000000 fvwrite_small_dev.c
00000000 l    df *ABS*	00000000 impure.c
00008ef0 l     O .rwdata	000000e0 impure_data
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 alt_getchar.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_write.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
00008e40 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00008cc4 g     F .text	0000002c alt_main
0000904c g       *ABS*	00000000 __flash_rwdata_start
000082c8 g     F .text	0000004c printf
00008cf0 g     F .text	00000038 alt_putstr
00009030 g     O .rwdata	00000004 jtag_uart
00008e54 g     F .text	00000008 altera_nios2_gen2_irq_init
00008000 g     F .entry	0000001c __reset
00008020 g       *ABS*	00000000 __flash_exceptions_start
000091a8 g     O .bss	00000004 errno
000091b0 g     O .bss	00000004 alt_argv
00011028 g       *ABS*	00000000 _gp
00008fd0 g     O .rwdata	00000030 alt_fd_list
00008dac g     F .text	0000005c altera_avalon_jtag_uart_read
0000828c g     F .text	0000003c _printf_r
00008ae4 g     F .text	00000064 .hidden __udivsi3
00008e5c g     F .text	00000038 alt_icache_flush
00009034 g     O .rwdata	00000004 alt_max_fd
00009028 g     O .rwdata	00000004 _global_impure_ptr
000091b8 g       *ABS*	00000000 __bss_end
00008ba0 g     F .text	00000044 alt_getchar
00008070 g     F .text	000000b4 display
00008000 g       *ABS*	00000000 __alt_mem_onchip_mem
00009000 g     O .rwdata	00000028 alt_dev_null
00008e3c g     F .text	00000004 alt_dcache_flush_all
0000904c g       *ABS*	00000000 __ram_rwdata_end
00009038 g     O .rwdata	00000008 alt_dev_list
00008d28 g     F .text	00000060 write
00008ef0 g       *ABS*	00000000 __ram_rodata_end
00008b48 g     F .text	00000058 .hidden __umodsi3
000091b8 g       *ABS*	00000000 end
0000d000 g       *ABS*	00000000 __alt_stack_pointer
00008e08 g     F .text	00000034 altera_avalon_jtag_uart_write
00008380 g     F .text	00000524 ___vfprintf_internal_r
00008020 g     F .text	0000003c _start
00008da8 g     F .text	00000004 alt_sys_init
00008ef0 g       *ABS*	00000000 __ram_rwdata_start
00008e94 g       *ABS*	00000000 __ram_rodata_start
000091b8 g       *ABS*	00000000 __alt_stack_base
000088c0 g     F .text	000000b8 __sfvwrite_small_dev
000091a8 g       *ABS*	00000000 __bss_start
00008124 g     F .text	00000168 main
000091ac g     O .bss	00000004 alt_envp
00009048 g     O .rwdata	00000004 alt_errno
000089ec g     F .text	00000084 .hidden __divsi3
00008e94 g       *ABS*	00000000 __flash_rodata_start
00008d88 g     F .text	00000020 alt_irq_init
00008994 g     F .text	00000058 _write_r
0000902c g     O .rwdata	00000004 _impure_ptr
000091b4 g     O .bss	00000004 alt_argc
00009040 g     O .rwdata	00000008 alt_fs_list
00008020 g       *ABS*	00000000 __ram_exceptions_start
0000904c g       *ABS*	00000000 _edata
000091b8 g       *ABS*	00000000 _end
00008020 g       *ABS*	00000000 __ram_exceptions_end
00008a70 g     F .text	00000074 .hidden __modsi3
0000d000 g       *ABS*	00000000 __alt_data_end
0000805c g     F .text	00000014 getChar
0000801c g       .entry	00000000 _exit
00008978 g     F .text	0000001c strlen
00008e48 g     F .text	0000000c alt_icache_flush_all
000088a4 g     F .text	0000001c __vfprintf_internal
00008be4 g     F .text	000000e0 alt_load



Disassembly of section .entry:

00008000 <__reset>:
    8000:	00820014 	movui	r2,2048
    8004:	1001483a 	initi	r2
    8008:	10bff804 	addi	r2,r2,-32
    800c:	00bffd16 	blt	zero,r2,8004 <_gp+0xffff6fdc>
    8010:	00400034 	movhi	at,0
    8014:	08600814 	ori	at,at,32800
    8018:	0800683a 	jmp	at

0000801c <_exit>:
    801c:	00000000 	call	0 <__alt_mem_onchip_mem-0x8000>

Disassembly of section .text:

00008020 <_start>:
    8020:	06c00034 	movhi	sp,0
    8024:	def40014 	ori	sp,sp,53248
    8028:	06800074 	movhi	gp,1
    802c:	d6840a14 	ori	gp,gp,4136
    8030:	00800034 	movhi	r2,0
    8034:	10a46a14 	ori	r2,r2,37288
    8038:	00c00034 	movhi	r3,0
    803c:	18e46e14 	ori	r3,r3,37304
    8040:	10c00326 	beq	r2,r3,8050 <_start+0x30>
    8044:	10000015 	stw	zero,0(r2)
    8048:	10800104 	addi	r2,r2,4
    804c:	10fffd36 	bltu	r2,r3,8044 <_gp+0xffff701c>
    8050:	0008be40 	call	8be4 <alt_load>
    8054:	0008cc40 	call	8cc4 <alt_main>

00008058 <alt_after_alt_main>:
    8058:	003fff06 	br	8058 <_gp+0xffff7030>

0000805c <getChar>:
#include <system.h>
#include "altera_avalon_pio_regs.h"
#include <stdio.h>

char getChar(int ten) {
	if (ten == 0) {
    805c:	20000226 	beq	r4,zero,8068 <getChar+0xc>
		return '-';
	}
	return (char) (ten - 1 + 48);
    8060:	20800bc4 	addi	r2,r4,47
    8064:	f800283a 	ret
#include "altera_avalon_pio_regs.h"
#include <stdio.h>

char getChar(int ten) {
	if (ten == 0) {
		return '-';
    8068:	00800b44 	movi	r2,45
	}
	return (char) (ten - 1 + 48);
}
    806c:	f800283a 	ret

00008070 <display>:

int display(char data) {
	if (data == '-') {
    8070:	21003fcc 	andi	r4,r4,255
    8074:	2100201c 	xori	r4,r4,128
    8078:	213fe004 	addi	r4,r4,-128
    807c:	00800b44 	movi	r2,45
    8080:	20801426 	beq	r4,r2,80d4 <display+0x64>
		return 64;
	} else if (data == '0') {
    8084:	00800c04 	movi	r2,48
    8088:	20801426 	beq	r4,r2,80dc <display+0x6c>
		return 63;
	} else if (data == '1') {
    808c:	00800c44 	movi	r2,49
    8090:	20801426 	beq	r4,r2,80e4 <display+0x74>
		return 6;
	} else if (data == '2') {
    8094:	00800c84 	movi	r2,50
    8098:	20801426 	beq	r4,r2,80ec <display+0x7c>
		return 91;
	} else if (data == '3') {
    809c:	00800cc4 	movi	r2,51
    80a0:	20801426 	beq	r4,r2,80f4 <display+0x84>
		return 79;
	} else if (data == '4') {
    80a4:	00800d04 	movi	r2,52
    80a8:	20801426 	beq	r4,r2,80fc <display+0x8c>
		return 102;
	} else if (data == '5') {
    80ac:	00800d44 	movi	r2,53
    80b0:	20801426 	beq	r4,r2,8104 <display+0x94>
		return 109;
	} else if (data == '6') {
    80b4:	00800d84 	movi	r2,54
    80b8:	20801426 	beq	r4,r2,810c <display+0x9c>
		return 125;
	} else if (data == '7') {
    80bc:	00800dc4 	movi	r2,55
    80c0:	20801426 	beq	r4,r2,8114 <display+0xa4>
		return 7;
	} else if (data == '8') {
    80c4:	00800e04 	movi	r2,56
    80c8:	20801426 	beq	r4,r2,811c <display+0xac>
		return 127;
	} else {
		return 103;
    80cc:	008019c4 	movi	r2,103
    80d0:	f800283a 	ret
	return (char) (ten - 1 + 48);
}

int display(char data) {
	if (data == '-') {
		return 64;
    80d4:	00801004 	movi	r2,64
    80d8:	f800283a 	ret
	} else if (data == '0') {
		return 63;
    80dc:	00800fc4 	movi	r2,63
    80e0:	f800283a 	ret
	} else if (data == '1') {
		return 6;
    80e4:	00800184 	movi	r2,6
    80e8:	f800283a 	ret
	} else if (data == '2') {
		return 91;
    80ec:	008016c4 	movi	r2,91
    80f0:	f800283a 	ret
	} else if (data == '3') {
		return 79;
    80f4:	008013c4 	movi	r2,79
    80f8:	f800283a 	ret
	} else if (data == '4') {
		return 102;
    80fc:	00801984 	movi	r2,102
    8100:	f800283a 	ret
	} else if (data == '5') {
		return 109;
    8104:	00801b44 	movi	r2,109
    8108:	f800283a 	ret
	} else if (data == '6') {
		return 125;
    810c:	00801f44 	movi	r2,125
    8110:	f800283a 	ret
	} else if (data == '7') {
		return 7;
    8114:	008001c4 	movi	r2,7
    8118:	f800283a 	ret
	} else if (data == '8') {
		return 127;
    811c:	00801fc4 	movi	r2,127
	} else {
		return 103;
	}
}
    8120:	f800283a 	ret

00008124 <main>:

int main() {
	alt_putstr("Welcome! Type \'S\' to start the camera system...");
    8124:	01000074 	movhi	r4,1
	} else {
		return 103;
	}
}

int main() {
    8128:	defff704 	addi	sp,sp,-36
	alt_putstr("Welcome! Type \'S\' to start the camera system...");
    812c:	2123a504 	addi	r4,r4,-29036
	} else {
		return 103;
	}
}

int main() {
    8130:	dfc00815 	stw	ra,32(sp)
    8134:	dc000015 	stw	r16,0(sp)
    8138:	ddc00715 	stw	r23,28(sp)
    813c:	dd800615 	stw	r22,24(sp)
    8140:	dd400515 	stw	r21,20(sp)
    8144:	dd000415 	stw	r20,16(sp)
    8148:	dcc00315 	stw	r19,12(sp)
    814c:	dc800215 	stw	r18,8(sp)
    8150:	dc400115 	stw	r17,4(sp)
	alt_putstr("Welcome! Type \'S\' to start the camera system...");
    8154:	0008cf00 	call	8cf0 <alt_putstr>
	char in = alt_getchar();
    8158:	0008ba00 	call	8ba0 <alt_getchar>
	while (in != 'S') {
    815c:	040014c4 	movi	r16,83
    8160:	10803fcc 	andi	r2,r2,255
    8164:	1080201c 	xori	r2,r2,128
    8168:	10bfe004 	addi	r2,r2,-128
    816c:	14000226 	beq	r2,r16,8178 <main+0x54>
		in = alt_getchar();
    8170:	0008ba00 	call	8ba0 <alt_getchar>
    8174:	003ffa06 	br	8160 <_gp+0xffff7138>
	}
	IOWR_ALTERA_AVALON_PIO_DATA(START_BASE, 1);
    8178:	00c00074 	movhi	r3,1
    817c:	00800044 	movi	r2,1
    8180:	18c42004 	addi	r3,r3,4224
    8184:	18800035 	stwio	r2,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(DOWNLOAD1_BASE, 1);
    8188:	00c00074 	movhi	r3,1
    818c:	18c43804 	addi	r3,r3,4320
    8190:	18800035 	stwio	r2,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(DOWNLOAD2_BASE, 1);
    8194:	00c00074 	movhi	r3,1
    8198:	18c43404 	addi	r3,r3,4304
    819c:	18800035 	stwio	r2,0(r3)

	char data1 = '-', data2 = '-';
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, ~display(data1));
    81a0:	04c00074 	movhi	r19,1
    81a4:	00bfefc4 	movi	r2,-65
    81a8:	9cc41404 	addi	r19,r19,4176
    81ac:	98800035 	stwio	r2,0(r19)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, ~display(data2));
    81b0:	04800074 	movhi	r18,1
    81b4:	94841004 	addi	r18,r18,4160
    81b8:	90800035 	stwio	r2,0(r18)
	printf("Buffer 1: %c   Buffer 2: %c\n", data1, data2);
    81bc:	01800b44 	movi	r6,45
    81c0:	01000074 	movhi	r4,1
    81c4:	300b883a 	mov	r5,r6
    81c8:	2123b104 	addi	r4,r4,-28988
    81cc:	00082c80 	call	82c8 <printf>
	}
	IOWR_ALTERA_AVALON_PIO_DATA(START_BASE, 1);
	IOWR_ALTERA_AVALON_PIO_DATA(DOWNLOAD1_BASE, 1);
	IOWR_ALTERA_AVALON_PIO_DATA(DOWNLOAD2_BASE, 1);

	char data1 = '-', data2 = '-';
    81d0:	00800b44 	movi	r2,45
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, ~display(data1));
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, ~display(data2));
	printf("Buffer 1: %c   Buffer 2: %c\n", data1, data2);
	while (1) {
		char cur1 = getChar(IORD_ALTERA_AVALON_PIO_DATA(TENOUT1_BASE));
    81d4:	05000074 	movhi	r20,1
		char cur2 = getChar(IORD_ALTERA_AVALON_PIO_DATA(TENOUT2_BASE));
    81d8:	05400074 	movhi	r21,1
	}
	IOWR_ALTERA_AVALON_PIO_DATA(START_BASE, 1);
	IOWR_ALTERA_AVALON_PIO_DATA(DOWNLOAD1_BASE, 1);
	IOWR_ALTERA_AVALON_PIO_DATA(DOWNLOAD2_BASE, 1);

	char data1 = '-', data2 = '-';
    81dc:	102f883a 	mov	r23,r2
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, ~display(data1));
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, ~display(data2));
	printf("Buffer 1: %c   Buffer 2: %c\n", data1, data2);
	while (1) {
		char cur1 = getChar(IORD_ALTERA_AVALON_PIO_DATA(TENOUT1_BASE));
    81e0:	a5040c04 	addi	r20,r20,4144
		char cur2 = getChar(IORD_ALTERA_AVALON_PIO_DATA(TENOUT2_BASE));
    81e4:	ad440804 	addi	r21,r21,4128
	char data1 = '-', data2 = '-';
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, ~display(data1));
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, ~display(data2));
	printf("Buffer 1: %c   Buffer 2: %c\n", data1, data2);
	while (1) {
		char cur1 = getChar(IORD_ALTERA_AVALON_PIO_DATA(TENOUT1_BASE));
    81e8:	a4400037 	ldwio	r17,0(r20)
#include <system.h>
#include "altera_avalon_pio_regs.h"
#include <stdio.h>

char getChar(int ten) {
	if (ten == 0) {
    81ec:	88000226 	beq	r17,zero,81f8 <main+0xd4>
		return '-';
	}
	return (char) (ten - 1 + 48);
    81f0:	8c400bc4 	addi	r17,r17,47
    81f4:	00000106 	br	81fc <main+0xd8>
#include "altera_avalon_pio_regs.h"
#include <stdio.h>

char getChar(int ten) {
	if (ten == 0) {
		return '-';
    81f8:	04400b44 	movi	r17,45
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, ~display(data1));
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, ~display(data2));
	printf("Buffer 1: %c   Buffer 2: %c\n", data1, data2);
	while (1) {
		char cur1 = getChar(IORD_ALTERA_AVALON_PIO_DATA(TENOUT1_BASE));
		char cur2 = getChar(IORD_ALTERA_AVALON_PIO_DATA(TENOUT2_BASE));
    81fc:	ac000037 	ldwio	r16,0(r21)
#include <system.h>
#include "altera_avalon_pio_regs.h"
#include <stdio.h>

char getChar(int ten) {
	if (ten == 0) {
    8200:	80000226 	beq	r16,zero,820c <main+0xe8>
		return '-';
	}
	return (char) (ten - 1 + 48);
    8204:	84000bc4 	addi	r16,r16,47
    8208:	00000106 	br	8210 <main+0xec>
#include "altera_avalon_pio_regs.h"
#include <stdio.h>

char getChar(int ten) {
	if (ten == 0) {
		return '-';
    820c:	04000b44 	movi	r16,45
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, ~display(data2));
	printf("Buffer 1: %c   Buffer 2: %c\n", data1, data2);
	while (1) {
		char cur1 = getChar(IORD_ALTERA_AVALON_PIO_DATA(TENOUT1_BASE));
		char cur2 = getChar(IORD_ALTERA_AVALON_PIO_DATA(TENOUT2_BASE));
		if (cur1 != data1 || cur2 != data2) {
    8210:	b8c03fcc 	andi	r3,r23,255
    8214:	89403fcc 	andi	r5,r17,255
    8218:	18c0201c 	xori	r3,r3,128
    821c:	2940201c 	xori	r5,r5,128
    8220:	85803fcc 	andi	r22,r16,255
    8224:	b580201c 	xori	r22,r22,128
    8228:	18ffe004 	addi	r3,r3,-128
    822c:	297fe004 	addi	r5,r5,-128
    8230:	b5bfe004 	addi	r22,r22,-128
    8234:	1940041e 	bne	r3,r5,8248 <main+0x124>
    8238:	10803fcc 	andi	r2,r2,255
    823c:	1080201c 	xori	r2,r2,128
    8240:	10bfe004 	addi	r2,r2,-128
    8244:	15800526 	beq	r2,r22,825c <main+0x138>
			printf("Buffer 1: %c   Buffer 2: %c\n", cur1, cur2);
    8248:	01000074 	movhi	r4,1
    824c:	b00d883a 	mov	r6,r22
    8250:	2123b104 	addi	r4,r4,-28988
    8254:	00082c80 	call	82c8 <printf>
    8258:	882f883a 	mov	r23,r17
			data1 = cur1;
			data2 = cur2;
		}
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, ~display(data1));
    825c:	b9003fcc 	andi	r4,r23,255
    8260:	2100201c 	xori	r4,r4,128
    8264:	213fe004 	addi	r4,r4,-128
    8268:	00080700 	call	8070 <display>
    826c:	0084303a 	nor	r2,zero,r2
    8270:	98800035 	stwio	r2,0(r19)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, ~display(data2));
    8274:	b009883a 	mov	r4,r22
    8278:	00080700 	call	8070 <display>
    827c:	0084303a 	nor	r2,zero,r2
    8280:	90800035 	stwio	r2,0(r18)
	}
    8284:	8005883a 	mov	r2,r16
    8288:	003fd706 	br	81e8 <_gp+0xffff71c0>

0000828c <_printf_r>:
    828c:	defffd04 	addi	sp,sp,-12
    8290:	dfc00015 	stw	ra,0(sp)
    8294:	d9800115 	stw	r6,4(sp)
    8298:	d9c00215 	stw	r7,8(sp)
    829c:	20c00217 	ldw	r3,8(r4)
    82a0:	01800074 	movhi	r6,1
    82a4:	31a23004 	addi	r6,r6,-30528
    82a8:	19800115 	stw	r6,4(r3)
    82ac:	280d883a 	mov	r6,r5
    82b0:	21400217 	ldw	r5,8(r4)
    82b4:	d9c00104 	addi	r7,sp,4
    82b8:	00083800 	call	8380 <___vfprintf_internal_r>
    82bc:	dfc00017 	ldw	ra,0(sp)
    82c0:	dec00304 	addi	sp,sp,12
    82c4:	f800283a 	ret

000082c8 <printf>:
    82c8:	defffc04 	addi	sp,sp,-16
    82cc:	dfc00015 	stw	ra,0(sp)
    82d0:	d9400115 	stw	r5,4(sp)
    82d4:	d9800215 	stw	r6,8(sp)
    82d8:	d9c00315 	stw	r7,12(sp)
    82dc:	00800074 	movhi	r2,1
    82e0:	10a40b04 	addi	r2,r2,-28628
    82e4:	10800017 	ldw	r2,0(r2)
    82e8:	01400074 	movhi	r5,1
    82ec:	29623004 	addi	r5,r5,-30528
    82f0:	10c00217 	ldw	r3,8(r2)
    82f4:	d9800104 	addi	r6,sp,4
    82f8:	19400115 	stw	r5,4(r3)
    82fc:	200b883a 	mov	r5,r4
    8300:	11000217 	ldw	r4,8(r2)
    8304:	00088a40 	call	88a4 <__vfprintf_internal>
    8308:	dfc00017 	ldw	ra,0(sp)
    830c:	dec00404 	addi	sp,sp,16
    8310:	f800283a 	ret

00008314 <print_repeat>:
    8314:	defffb04 	addi	sp,sp,-20
    8318:	dc800315 	stw	r18,12(sp)
    831c:	dc400215 	stw	r17,8(sp)
    8320:	dc000115 	stw	r16,4(sp)
    8324:	dfc00415 	stw	ra,16(sp)
    8328:	2025883a 	mov	r18,r4
    832c:	2823883a 	mov	r17,r5
    8330:	d9800005 	stb	r6,0(sp)
    8334:	3821883a 	mov	r16,r7
    8338:	04000a0e 	bge	zero,r16,8364 <print_repeat+0x50>
    833c:	88800117 	ldw	r2,4(r17)
    8340:	01c00044 	movi	r7,1
    8344:	d80d883a 	mov	r6,sp
    8348:	880b883a 	mov	r5,r17
    834c:	9009883a 	mov	r4,r18
    8350:	103ee83a 	callr	r2
    8354:	843fffc4 	addi	r16,r16,-1
    8358:	103ff726 	beq	r2,zero,8338 <_gp+0xffff7310>
    835c:	00bfffc4 	movi	r2,-1
    8360:	00000106 	br	8368 <print_repeat+0x54>
    8364:	0005883a 	mov	r2,zero
    8368:	dfc00417 	ldw	ra,16(sp)
    836c:	dc800317 	ldw	r18,12(sp)
    8370:	dc400217 	ldw	r17,8(sp)
    8374:	dc000117 	ldw	r16,4(sp)
    8378:	dec00504 	addi	sp,sp,20
    837c:	f800283a 	ret

00008380 <___vfprintf_internal_r>:
    8380:	deffe504 	addi	sp,sp,-108
    8384:	d8c00804 	addi	r3,sp,32
    8388:	df001915 	stw	fp,100(sp)
    838c:	ddc01815 	stw	r23,96(sp)
    8390:	dd801715 	stw	r22,92(sp)
    8394:	dd401615 	stw	r21,88(sp)
    8398:	dd001515 	stw	r20,84(sp)
    839c:	dcc01415 	stw	r19,80(sp)
    83a0:	dc801315 	stw	r18,76(sp)
    83a4:	dc401215 	stw	r17,72(sp)
    83a8:	dc001115 	stw	r16,68(sp)
    83ac:	dfc01a15 	stw	ra,104(sp)
    83b0:	2027883a 	mov	r19,r4
    83b4:	2839883a 	mov	fp,r5
    83b8:	382d883a 	mov	r22,r7
    83bc:	d9800f15 	stw	r6,60(sp)
    83c0:	0021883a 	mov	r16,zero
    83c4:	d8000e15 	stw	zero,56(sp)
    83c8:	002f883a 	mov	r23,zero
    83cc:	002b883a 	mov	r21,zero
    83d0:	0025883a 	mov	r18,zero
    83d4:	0023883a 	mov	r17,zero
    83d8:	d8000c15 	stw	zero,48(sp)
    83dc:	d8000b15 	stw	zero,44(sp)
    83e0:	0029883a 	mov	r20,zero
    83e4:	d8c00915 	stw	r3,36(sp)
    83e8:	d8c00f17 	ldw	r3,60(sp)
    83ec:	19000003 	ldbu	r4,0(r3)
    83f0:	20803fcc 	andi	r2,r4,255
    83f4:	1080201c 	xori	r2,r2,128
    83f8:	10bfe004 	addi	r2,r2,-128
    83fc:	10011c26 	beq	r2,zero,8870 <___vfprintf_internal_r+0x4f0>
    8400:	00c00044 	movi	r3,1
    8404:	a0c01426 	beq	r20,r3,8458 <___vfprintf_internal_r+0xd8>
    8408:	1d000216 	blt	r3,r20,8414 <___vfprintf_internal_r+0x94>
    840c:	a0000626 	beq	r20,zero,8428 <___vfprintf_internal_r+0xa8>
    8410:	00011306 	br	8860 <___vfprintf_internal_r+0x4e0>
    8414:	01400084 	movi	r5,2
    8418:	a1401d26 	beq	r20,r5,8490 <___vfprintf_internal_r+0x110>
    841c:	014000c4 	movi	r5,3
    8420:	a1402926 	beq	r20,r5,84c8 <___vfprintf_internal_r+0x148>
    8424:	00010e06 	br	8860 <___vfprintf_internal_r+0x4e0>
    8428:	01400944 	movi	r5,37
    842c:	1140fb26 	beq	r2,r5,881c <___vfprintf_internal_r+0x49c>
    8430:	e0800117 	ldw	r2,4(fp)
    8434:	d9000005 	stb	r4,0(sp)
    8438:	01c00044 	movi	r7,1
    843c:	d80d883a 	mov	r6,sp
    8440:	e00b883a 	mov	r5,fp
    8444:	9809883a 	mov	r4,r19
    8448:	103ee83a 	callr	r2
    844c:	1000d61e 	bne	r2,zero,87a8 <___vfprintf_internal_r+0x428>
    8450:	84000044 	addi	r16,r16,1
    8454:	00010206 	br	8860 <___vfprintf_internal_r+0x4e0>
    8458:	01400c04 	movi	r5,48
    845c:	1140f826 	beq	r2,r5,8840 <___vfprintf_internal_r+0x4c0>
    8460:	01400944 	movi	r5,37
    8464:	11400a1e 	bne	r2,r5,8490 <___vfprintf_internal_r+0x110>
    8468:	d8800005 	stb	r2,0(sp)
    846c:	e0800117 	ldw	r2,4(fp)
    8470:	a00f883a 	mov	r7,r20
    8474:	d80d883a 	mov	r6,sp
    8478:	e00b883a 	mov	r5,fp
    847c:	9809883a 	mov	r4,r19
    8480:	103ee83a 	callr	r2
    8484:	1000c81e 	bne	r2,zero,87a8 <___vfprintf_internal_r+0x428>
    8488:	84000044 	addi	r16,r16,1
    848c:	0000f306 	br	885c <___vfprintf_internal_r+0x4dc>
    8490:	217ff404 	addi	r5,r4,-48
    8494:	29403fcc 	andi	r5,r5,255
    8498:	00c00244 	movi	r3,9
    849c:	19400736 	bltu	r3,r5,84bc <___vfprintf_internal_r+0x13c>
    84a0:	00bfffc4 	movi	r2,-1
    84a4:	88800226 	beq	r17,r2,84b0 <___vfprintf_internal_r+0x130>
    84a8:	8c4002a4 	muli	r17,r17,10
    84ac:	00000106 	br	84b4 <___vfprintf_internal_r+0x134>
    84b0:	0023883a 	mov	r17,zero
    84b4:	2c63883a 	add	r17,r5,r17
    84b8:	0000e206 	br	8844 <___vfprintf_internal_r+0x4c4>
    84bc:	01400b84 	movi	r5,46
    84c0:	1140e426 	beq	r2,r5,8854 <___vfprintf_internal_r+0x4d4>
    84c4:	05000084 	movi	r20,2
    84c8:	213ff404 	addi	r4,r4,-48
    84cc:	21003fcc 	andi	r4,r4,255
    84d0:	00c00244 	movi	r3,9
    84d4:	19000736 	bltu	r3,r4,84f4 <___vfprintf_internal_r+0x174>
    84d8:	00bfffc4 	movi	r2,-1
    84dc:	90800226 	beq	r18,r2,84e8 <___vfprintf_internal_r+0x168>
    84e0:	948002a4 	muli	r18,r18,10
    84e4:	00000106 	br	84ec <___vfprintf_internal_r+0x16c>
    84e8:	0025883a 	mov	r18,zero
    84ec:	24a5883a 	add	r18,r4,r18
    84f0:	0000db06 	br	8860 <___vfprintf_internal_r+0x4e0>
    84f4:	00c01b04 	movi	r3,108
    84f8:	10c0d426 	beq	r2,r3,884c <___vfprintf_internal_r+0x4cc>
    84fc:	013fffc4 	movi	r4,-1
    8500:	91000226 	beq	r18,r4,850c <___vfprintf_internal_r+0x18c>
    8504:	d8000b15 	stw	zero,44(sp)
    8508:	00000106 	br	8510 <___vfprintf_internal_r+0x190>
    850c:	04800044 	movi	r18,1
    8510:	01001a44 	movi	r4,105
    8514:	11001626 	beq	r2,r4,8570 <___vfprintf_internal_r+0x1f0>
    8518:	20800916 	blt	r4,r2,8540 <___vfprintf_internal_r+0x1c0>
    851c:	010018c4 	movi	r4,99
    8520:	11008a26 	beq	r2,r4,874c <___vfprintf_internal_r+0x3cc>
    8524:	01001904 	movi	r4,100
    8528:	11001126 	beq	r2,r4,8570 <___vfprintf_internal_r+0x1f0>
    852c:	01001604 	movi	r4,88
    8530:	1100ca1e 	bne	r2,r4,885c <___vfprintf_internal_r+0x4dc>
    8534:	00c00044 	movi	r3,1
    8538:	d8c00e15 	stw	r3,56(sp)
    853c:	00001406 	br	8590 <___vfprintf_internal_r+0x210>
    8540:	01001cc4 	movi	r4,115
    8544:	11009a26 	beq	r2,r4,87b0 <___vfprintf_internal_r+0x430>
    8548:	20800416 	blt	r4,r2,855c <___vfprintf_internal_r+0x1dc>
    854c:	01001bc4 	movi	r4,111
    8550:	1100c21e 	bne	r2,r4,885c <___vfprintf_internal_r+0x4dc>
    8554:	05400204 	movi	r21,8
    8558:	00000e06 	br	8594 <___vfprintf_internal_r+0x214>
    855c:	01001d44 	movi	r4,117
    8560:	11000c26 	beq	r2,r4,8594 <___vfprintf_internal_r+0x214>
    8564:	01001e04 	movi	r4,120
    8568:	11000926 	beq	r2,r4,8590 <___vfprintf_internal_r+0x210>
    856c:	0000bb06 	br	885c <___vfprintf_internal_r+0x4dc>
    8570:	b5000104 	addi	r20,r22,4
    8574:	b8000726 	beq	r23,zero,8594 <___vfprintf_internal_r+0x214>
    8578:	dd000d15 	stw	r20,52(sp)
    857c:	b5800017 	ldw	r22,0(r22)
    8580:	b000080e 	bge	r22,zero,85a4 <___vfprintf_internal_r+0x224>
    8584:	05adc83a 	sub	r22,zero,r22
    8588:	02800044 	movi	r10,1
    858c:	00000606 	br	85a8 <___vfprintf_internal_r+0x228>
    8590:	05400404 	movi	r21,16
    8594:	b0c00104 	addi	r3,r22,4
    8598:	d8c00d15 	stw	r3,52(sp)
    859c:	b5800017 	ldw	r22,0(r22)
    85a0:	002f883a 	mov	r23,zero
    85a4:	0015883a 	mov	r10,zero
    85a8:	d829883a 	mov	r20,sp
    85ac:	b0001426 	beq	r22,zero,8600 <___vfprintf_internal_r+0x280>
    85b0:	b009883a 	mov	r4,r22
    85b4:	a80b883a 	mov	r5,r21
    85b8:	da801015 	stw	r10,64(sp)
    85bc:	0008ae40 	call	8ae4 <__udivsi3>
    85c0:	1549383a 	mul	r4,r2,r21
    85c4:	00c00244 	movi	r3,9
    85c8:	da801017 	ldw	r10,64(sp)
    85cc:	b12dc83a 	sub	r22,r22,r4
    85d0:	1d800216 	blt	r3,r22,85dc <___vfprintf_internal_r+0x25c>
    85d4:	b5800c04 	addi	r22,r22,48
    85d8:	00000506 	br	85f0 <___vfprintf_internal_r+0x270>
    85dc:	d8c00e17 	ldw	r3,56(sp)
    85e0:	18000226 	beq	r3,zero,85ec <___vfprintf_internal_r+0x26c>
    85e4:	b5800dc4 	addi	r22,r22,55
    85e8:	00000106 	br	85f0 <___vfprintf_internal_r+0x270>
    85ec:	b58015c4 	addi	r22,r22,87
    85f0:	a5800005 	stb	r22,0(r20)
    85f4:	a5000044 	addi	r20,r20,1
    85f8:	102d883a 	mov	r22,r2
    85fc:	003feb06 	br	85ac <_gp+0xffff7584>
    8600:	a6c7c83a 	sub	r3,r20,sp
    8604:	d8c00a15 	stw	r3,40(sp)
    8608:	90c5c83a 	sub	r2,r18,r3
    860c:	00800a0e 	bge	zero,r2,8638 <___vfprintf_internal_r+0x2b8>
    8610:	a085883a 	add	r2,r20,r2
    8614:	01400c04 	movi	r5,48
    8618:	d8c00917 	ldw	r3,36(sp)
    861c:	a009883a 	mov	r4,r20
    8620:	a0c0032e 	bgeu	r20,r3,8630 <___vfprintf_internal_r+0x2b0>
    8624:	a5000044 	addi	r20,r20,1
    8628:	21400005 	stb	r5,0(r4)
    862c:	a0bffa1e 	bne	r20,r2,8618 <_gp+0xffff75f0>
    8630:	a6c7c83a 	sub	r3,r20,sp
    8634:	d8c00a15 	stw	r3,40(sp)
    8638:	d8c00a17 	ldw	r3,40(sp)
    863c:	50d3883a 	add	r9,r10,r3
    8640:	d8c00b17 	ldw	r3,44(sp)
    8644:	8a6dc83a 	sub	r22,r17,r9
    8648:	18001726 	beq	r3,zero,86a8 <___vfprintf_internal_r+0x328>
    864c:	50000a26 	beq	r10,zero,8678 <___vfprintf_internal_r+0x2f8>
    8650:	00800b44 	movi	r2,45
    8654:	d8800805 	stb	r2,32(sp)
    8658:	e0800117 	ldw	r2,4(fp)
    865c:	01c00044 	movi	r7,1
    8660:	d9800804 	addi	r6,sp,32
    8664:	e00b883a 	mov	r5,fp
    8668:	9809883a 	mov	r4,r19
    866c:	103ee83a 	callr	r2
    8670:	10004d1e 	bne	r2,zero,87a8 <___vfprintf_internal_r+0x428>
    8674:	84000044 	addi	r16,r16,1
    8678:	0580070e 	bge	zero,r22,8698 <___vfprintf_internal_r+0x318>
    867c:	b00f883a 	mov	r7,r22
    8680:	01800c04 	movi	r6,48
    8684:	e00b883a 	mov	r5,fp
    8688:	9809883a 	mov	r4,r19
    868c:	00083140 	call	8314 <print_repeat>
    8690:	1000451e 	bne	r2,zero,87a8 <___vfprintf_internal_r+0x428>
    8694:	85a1883a 	add	r16,r16,r22
    8698:	d8c00a17 	ldw	r3,40(sp)
    869c:	a013883a 	mov	r9,r20
    86a0:	1d2dc83a 	sub	r22,r3,r20
    86a4:	00002206 	br	8730 <___vfprintf_internal_r+0x3b0>
    86a8:	0580090e 	bge	zero,r22,86d0 <___vfprintf_internal_r+0x350>
    86ac:	b00f883a 	mov	r7,r22
    86b0:	01800804 	movi	r6,32
    86b4:	e00b883a 	mov	r5,fp
    86b8:	9809883a 	mov	r4,r19
    86bc:	da801015 	stw	r10,64(sp)
    86c0:	00083140 	call	8314 <print_repeat>
    86c4:	da801017 	ldw	r10,64(sp)
    86c8:	1000371e 	bne	r2,zero,87a8 <___vfprintf_internal_r+0x428>
    86cc:	85a1883a 	add	r16,r16,r22
    86d0:	503ff126 	beq	r10,zero,8698 <_gp+0xffff7670>
    86d4:	00800b44 	movi	r2,45
    86d8:	d8800805 	stb	r2,32(sp)
    86dc:	e0800117 	ldw	r2,4(fp)
    86e0:	01c00044 	movi	r7,1
    86e4:	d9800804 	addi	r6,sp,32
    86e8:	e00b883a 	mov	r5,fp
    86ec:	9809883a 	mov	r4,r19
    86f0:	103ee83a 	callr	r2
    86f4:	10002c1e 	bne	r2,zero,87a8 <___vfprintf_internal_r+0x428>
    86f8:	84000044 	addi	r16,r16,1
    86fc:	003fe606 	br	8698 <_gp+0xffff7670>
    8700:	4a7fffc4 	addi	r9,r9,-1
    8704:	48800003 	ldbu	r2,0(r9)
    8708:	01c00044 	movi	r7,1
    870c:	d9800804 	addi	r6,sp,32
    8710:	d8800805 	stb	r2,32(sp)
    8714:	e0800117 	ldw	r2,4(fp)
    8718:	e00b883a 	mov	r5,fp
    871c:	da401015 	stw	r9,64(sp)
    8720:	9809883a 	mov	r4,r19
    8724:	103ee83a 	callr	r2
    8728:	da401017 	ldw	r9,64(sp)
    872c:	10001e1e 	bne	r2,zero,87a8 <___vfprintf_internal_r+0x428>
    8730:	8245c83a 	sub	r2,r16,r9
    8734:	4d89883a 	add	r4,r9,r22
    8738:	a085883a 	add	r2,r20,r2
    873c:	013ff016 	blt	zero,r4,8700 <_gp+0xffff76d8>
    8740:	1021883a 	mov	r16,r2
    8744:	dd800d17 	ldw	r22,52(sp)
    8748:	00004406 	br	885c <___vfprintf_internal_r+0x4dc>
    874c:	00800044 	movi	r2,1
    8750:	1440080e 	bge	r2,r17,8774 <___vfprintf_internal_r+0x3f4>
    8754:	8d3fffc4 	addi	r20,r17,-1
    8758:	a00f883a 	mov	r7,r20
    875c:	01800804 	movi	r6,32
    8760:	e00b883a 	mov	r5,fp
    8764:	9809883a 	mov	r4,r19
    8768:	00083140 	call	8314 <print_repeat>
    876c:	10000e1e 	bne	r2,zero,87a8 <___vfprintf_internal_r+0x428>
    8770:	8521883a 	add	r16,r16,r20
    8774:	b0800017 	ldw	r2,0(r22)
    8778:	01c00044 	movi	r7,1
    877c:	d80d883a 	mov	r6,sp
    8780:	d8800005 	stb	r2,0(sp)
    8784:	e0800117 	ldw	r2,4(fp)
    8788:	e00b883a 	mov	r5,fp
    878c:	9809883a 	mov	r4,r19
    8790:	b5000104 	addi	r20,r22,4
    8794:	103ee83a 	callr	r2
    8798:	1000031e 	bne	r2,zero,87a8 <___vfprintf_internal_r+0x428>
    879c:	84000044 	addi	r16,r16,1
    87a0:	a02d883a 	mov	r22,r20
    87a4:	00002d06 	br	885c <___vfprintf_internal_r+0x4dc>
    87a8:	00bfffc4 	movi	r2,-1
    87ac:	00003106 	br	8874 <___vfprintf_internal_r+0x4f4>
    87b0:	b5000017 	ldw	r20,0(r22)
    87b4:	b0c00104 	addi	r3,r22,4
    87b8:	d8c00a15 	stw	r3,40(sp)
    87bc:	a009883a 	mov	r4,r20
    87c0:	00089780 	call	8978 <strlen>
    87c4:	8893c83a 	sub	r9,r17,r2
    87c8:	102d883a 	mov	r22,r2
    87cc:	0240090e 	bge	zero,r9,87f4 <___vfprintf_internal_r+0x474>
    87d0:	480f883a 	mov	r7,r9
    87d4:	01800804 	movi	r6,32
    87d8:	e00b883a 	mov	r5,fp
    87dc:	9809883a 	mov	r4,r19
    87e0:	da401015 	stw	r9,64(sp)
    87e4:	00083140 	call	8314 <print_repeat>
    87e8:	da401017 	ldw	r9,64(sp)
    87ec:	103fee1e 	bne	r2,zero,87a8 <_gp+0xffff7780>
    87f0:	8261883a 	add	r16,r16,r9
    87f4:	e0800117 	ldw	r2,4(fp)
    87f8:	b00f883a 	mov	r7,r22
    87fc:	a00d883a 	mov	r6,r20
    8800:	e00b883a 	mov	r5,fp
    8804:	9809883a 	mov	r4,r19
    8808:	103ee83a 	callr	r2
    880c:	103fe61e 	bne	r2,zero,87a8 <_gp+0xffff7780>
    8810:	85a1883a 	add	r16,r16,r22
    8814:	dd800a17 	ldw	r22,40(sp)
    8818:	00001006 	br	885c <___vfprintf_internal_r+0x4dc>
    881c:	05c00044 	movi	r23,1
    8820:	04bfffc4 	movi	r18,-1
    8824:	d8000e15 	stw	zero,56(sp)
    8828:	05400284 	movi	r21,10
    882c:	9023883a 	mov	r17,r18
    8830:	d8000c15 	stw	zero,48(sp)
    8834:	d8000b15 	stw	zero,44(sp)
    8838:	b829883a 	mov	r20,r23
    883c:	00000806 	br	8860 <___vfprintf_internal_r+0x4e0>
    8840:	dd000b15 	stw	r20,44(sp)
    8844:	05000084 	movi	r20,2
    8848:	00000506 	br	8860 <___vfprintf_internal_r+0x4e0>
    884c:	00c00044 	movi	r3,1
    8850:	d8c00c15 	stw	r3,48(sp)
    8854:	050000c4 	movi	r20,3
    8858:	00000106 	br	8860 <___vfprintf_internal_r+0x4e0>
    885c:	0029883a 	mov	r20,zero
    8860:	d8c00f17 	ldw	r3,60(sp)
    8864:	18c00044 	addi	r3,r3,1
    8868:	d8c00f15 	stw	r3,60(sp)
    886c:	003ede06 	br	83e8 <_gp+0xffff73c0>
    8870:	8005883a 	mov	r2,r16
    8874:	dfc01a17 	ldw	ra,104(sp)
    8878:	df001917 	ldw	fp,100(sp)
    887c:	ddc01817 	ldw	r23,96(sp)
    8880:	dd801717 	ldw	r22,92(sp)
    8884:	dd401617 	ldw	r21,88(sp)
    8888:	dd001517 	ldw	r20,84(sp)
    888c:	dcc01417 	ldw	r19,80(sp)
    8890:	dc801317 	ldw	r18,76(sp)
    8894:	dc401217 	ldw	r17,72(sp)
    8898:	dc001117 	ldw	r16,68(sp)
    889c:	dec01b04 	addi	sp,sp,108
    88a0:	f800283a 	ret

000088a4 <__vfprintf_internal>:
    88a4:	00800074 	movhi	r2,1
    88a8:	10a40b04 	addi	r2,r2,-28628
    88ac:	300f883a 	mov	r7,r6
    88b0:	280d883a 	mov	r6,r5
    88b4:	200b883a 	mov	r5,r4
    88b8:	11000017 	ldw	r4,0(r2)
    88bc:	00083801 	jmpi	8380 <___vfprintf_internal_r>

000088c0 <__sfvwrite_small_dev>:
    88c0:	2880000b 	ldhu	r2,0(r5)
    88c4:	1080020c 	andi	r2,r2,8
    88c8:	10002126 	beq	r2,zero,8950 <__sfvwrite_small_dev+0x90>
    88cc:	2880008f 	ldh	r2,2(r5)
    88d0:	defffa04 	addi	sp,sp,-24
    88d4:	dc000015 	stw	r16,0(sp)
    88d8:	dfc00515 	stw	ra,20(sp)
    88dc:	dd000415 	stw	r20,16(sp)
    88e0:	dcc00315 	stw	r19,12(sp)
    88e4:	dc800215 	stw	r18,8(sp)
    88e8:	dc400115 	stw	r17,4(sp)
    88ec:	2821883a 	mov	r16,r5
    88f0:	10001216 	blt	r2,zero,893c <__sfvwrite_small_dev+0x7c>
    88f4:	2027883a 	mov	r19,r4
    88f8:	3025883a 	mov	r18,r6
    88fc:	3823883a 	mov	r17,r7
    8900:	05010004 	movi	r20,1024
    8904:	04400b0e 	bge	zero,r17,8934 <__sfvwrite_small_dev+0x74>
    8908:	880f883a 	mov	r7,r17
    890c:	a440010e 	bge	r20,r17,8914 <__sfvwrite_small_dev+0x54>
    8910:	01c10004 	movi	r7,1024
    8914:	8140008f 	ldh	r5,2(r16)
    8918:	900d883a 	mov	r6,r18
    891c:	9809883a 	mov	r4,r19
    8920:	00089940 	call	8994 <_write_r>
    8924:	0080050e 	bge	zero,r2,893c <__sfvwrite_small_dev+0x7c>
    8928:	88a3c83a 	sub	r17,r17,r2
    892c:	90a5883a 	add	r18,r18,r2
    8930:	003ff406 	br	8904 <_gp+0xffff78dc>
    8934:	0005883a 	mov	r2,zero
    8938:	00000706 	br	8958 <__sfvwrite_small_dev+0x98>
    893c:	8080000b 	ldhu	r2,0(r16)
    8940:	10801014 	ori	r2,r2,64
    8944:	8080000d 	sth	r2,0(r16)
    8948:	00bfffc4 	movi	r2,-1
    894c:	00000206 	br	8958 <__sfvwrite_small_dev+0x98>
    8950:	00bfffc4 	movi	r2,-1
    8954:	f800283a 	ret
    8958:	dfc00517 	ldw	ra,20(sp)
    895c:	dd000417 	ldw	r20,16(sp)
    8960:	dcc00317 	ldw	r19,12(sp)
    8964:	dc800217 	ldw	r18,8(sp)
    8968:	dc400117 	ldw	r17,4(sp)
    896c:	dc000017 	ldw	r16,0(sp)
    8970:	dec00604 	addi	sp,sp,24
    8974:	f800283a 	ret

00008978 <strlen>:
    8978:	2005883a 	mov	r2,r4
    897c:	10c00007 	ldb	r3,0(r2)
    8980:	18000226 	beq	r3,zero,898c <strlen+0x14>
    8984:	10800044 	addi	r2,r2,1
    8988:	003ffc06 	br	897c <_gp+0xffff7954>
    898c:	1105c83a 	sub	r2,r2,r4
    8990:	f800283a 	ret

00008994 <_write_r>:
    8994:	defffd04 	addi	sp,sp,-12
    8998:	dc000015 	stw	r16,0(sp)
    899c:	04000074 	movhi	r16,1
    89a0:	dc400115 	stw	r17,4(sp)
    89a4:	84246a04 	addi	r16,r16,-28248
    89a8:	2023883a 	mov	r17,r4
    89ac:	2809883a 	mov	r4,r5
    89b0:	300b883a 	mov	r5,r6
    89b4:	380d883a 	mov	r6,r7
    89b8:	dfc00215 	stw	ra,8(sp)
    89bc:	80000015 	stw	zero,0(r16)
    89c0:	0008d280 	call	8d28 <write>
    89c4:	00ffffc4 	movi	r3,-1
    89c8:	10c0031e 	bne	r2,r3,89d8 <_write_r+0x44>
    89cc:	80c00017 	ldw	r3,0(r16)
    89d0:	18000126 	beq	r3,zero,89d8 <_write_r+0x44>
    89d4:	88c00015 	stw	r3,0(r17)
    89d8:	dfc00217 	ldw	ra,8(sp)
    89dc:	dc400117 	ldw	r17,4(sp)
    89e0:	dc000017 	ldw	r16,0(sp)
    89e4:	dec00304 	addi	sp,sp,12
    89e8:	f800283a 	ret

000089ec <__divsi3>:
    89ec:	20001b16 	blt	r4,zero,8a5c <__divsi3+0x70>
    89f0:	000f883a 	mov	r7,zero
    89f4:	28001616 	blt	r5,zero,8a50 <__divsi3+0x64>
    89f8:	200d883a 	mov	r6,r4
    89fc:	29001a2e 	bgeu	r5,r4,8a68 <__divsi3+0x7c>
    8a00:	00800804 	movi	r2,32
    8a04:	00c00044 	movi	r3,1
    8a08:	00000106 	br	8a10 <__divsi3+0x24>
    8a0c:	10000d26 	beq	r2,zero,8a44 <__divsi3+0x58>
    8a10:	294b883a 	add	r5,r5,r5
    8a14:	10bfffc4 	addi	r2,r2,-1
    8a18:	18c7883a 	add	r3,r3,r3
    8a1c:	293ffb36 	bltu	r5,r4,8a0c <_gp+0xffff79e4>
    8a20:	0005883a 	mov	r2,zero
    8a24:	18000726 	beq	r3,zero,8a44 <__divsi3+0x58>
    8a28:	0005883a 	mov	r2,zero
    8a2c:	31400236 	bltu	r6,r5,8a38 <__divsi3+0x4c>
    8a30:	314dc83a 	sub	r6,r6,r5
    8a34:	10c4b03a 	or	r2,r2,r3
    8a38:	1806d07a 	srli	r3,r3,1
    8a3c:	280ad07a 	srli	r5,r5,1
    8a40:	183ffa1e 	bne	r3,zero,8a2c <_gp+0xffff7a04>
    8a44:	38000126 	beq	r7,zero,8a4c <__divsi3+0x60>
    8a48:	0085c83a 	sub	r2,zero,r2
    8a4c:	f800283a 	ret
    8a50:	014bc83a 	sub	r5,zero,r5
    8a54:	39c0005c 	xori	r7,r7,1
    8a58:	003fe706 	br	89f8 <_gp+0xffff79d0>
    8a5c:	0109c83a 	sub	r4,zero,r4
    8a60:	01c00044 	movi	r7,1
    8a64:	003fe306 	br	89f4 <_gp+0xffff79cc>
    8a68:	00c00044 	movi	r3,1
    8a6c:	003fee06 	br	8a28 <_gp+0xffff7a00>

00008a70 <__modsi3>:
    8a70:	20001716 	blt	r4,zero,8ad0 <__modsi3+0x60>
    8a74:	000f883a 	mov	r7,zero
    8a78:	2005883a 	mov	r2,r4
    8a7c:	28001216 	blt	r5,zero,8ac8 <__modsi3+0x58>
    8a80:	2900162e 	bgeu	r5,r4,8adc <__modsi3+0x6c>
    8a84:	01800804 	movi	r6,32
    8a88:	00c00044 	movi	r3,1
    8a8c:	00000106 	br	8a94 <__modsi3+0x24>
    8a90:	30000a26 	beq	r6,zero,8abc <__modsi3+0x4c>
    8a94:	294b883a 	add	r5,r5,r5
    8a98:	31bfffc4 	addi	r6,r6,-1
    8a9c:	18c7883a 	add	r3,r3,r3
    8aa0:	293ffb36 	bltu	r5,r4,8a90 <_gp+0xffff7a68>
    8aa4:	18000526 	beq	r3,zero,8abc <__modsi3+0x4c>
    8aa8:	1806d07a 	srli	r3,r3,1
    8aac:	11400136 	bltu	r2,r5,8ab4 <__modsi3+0x44>
    8ab0:	1145c83a 	sub	r2,r2,r5
    8ab4:	280ad07a 	srli	r5,r5,1
    8ab8:	183ffb1e 	bne	r3,zero,8aa8 <_gp+0xffff7a80>
    8abc:	38000126 	beq	r7,zero,8ac4 <__modsi3+0x54>
    8ac0:	0085c83a 	sub	r2,zero,r2
    8ac4:	f800283a 	ret
    8ac8:	014bc83a 	sub	r5,zero,r5
    8acc:	003fec06 	br	8a80 <_gp+0xffff7a58>
    8ad0:	0109c83a 	sub	r4,zero,r4
    8ad4:	01c00044 	movi	r7,1
    8ad8:	003fe706 	br	8a78 <_gp+0xffff7a50>
    8adc:	00c00044 	movi	r3,1
    8ae0:	003ff106 	br	8aa8 <_gp+0xffff7a80>

00008ae4 <__udivsi3>:
    8ae4:	200d883a 	mov	r6,r4
    8ae8:	2900152e 	bgeu	r5,r4,8b40 <__udivsi3+0x5c>
    8aec:	28001416 	blt	r5,zero,8b40 <__udivsi3+0x5c>
    8af0:	00800804 	movi	r2,32
    8af4:	00c00044 	movi	r3,1
    8af8:	00000206 	br	8b04 <__udivsi3+0x20>
    8afc:	10000e26 	beq	r2,zero,8b38 <__udivsi3+0x54>
    8b00:	28000516 	blt	r5,zero,8b18 <__udivsi3+0x34>
    8b04:	294b883a 	add	r5,r5,r5
    8b08:	10bfffc4 	addi	r2,r2,-1
    8b0c:	18c7883a 	add	r3,r3,r3
    8b10:	293ffa36 	bltu	r5,r4,8afc <_gp+0xffff7ad4>
    8b14:	18000826 	beq	r3,zero,8b38 <__udivsi3+0x54>
    8b18:	0005883a 	mov	r2,zero
    8b1c:	31400236 	bltu	r6,r5,8b28 <__udivsi3+0x44>
    8b20:	314dc83a 	sub	r6,r6,r5
    8b24:	10c4b03a 	or	r2,r2,r3
    8b28:	1806d07a 	srli	r3,r3,1
    8b2c:	280ad07a 	srli	r5,r5,1
    8b30:	183ffa1e 	bne	r3,zero,8b1c <_gp+0xffff7af4>
    8b34:	f800283a 	ret
    8b38:	0005883a 	mov	r2,zero
    8b3c:	f800283a 	ret
    8b40:	00c00044 	movi	r3,1
    8b44:	003ff406 	br	8b18 <_gp+0xffff7af0>

00008b48 <__umodsi3>:
    8b48:	2005883a 	mov	r2,r4
    8b4c:	2900122e 	bgeu	r5,r4,8b98 <__umodsi3+0x50>
    8b50:	28001116 	blt	r5,zero,8b98 <__umodsi3+0x50>
    8b54:	01800804 	movi	r6,32
    8b58:	00c00044 	movi	r3,1
    8b5c:	00000206 	br	8b68 <__umodsi3+0x20>
    8b60:	30000c26 	beq	r6,zero,8b94 <__umodsi3+0x4c>
    8b64:	28000516 	blt	r5,zero,8b7c <__umodsi3+0x34>
    8b68:	294b883a 	add	r5,r5,r5
    8b6c:	31bfffc4 	addi	r6,r6,-1
    8b70:	18c7883a 	add	r3,r3,r3
    8b74:	293ffa36 	bltu	r5,r4,8b60 <_gp+0xffff7b38>
    8b78:	18000626 	beq	r3,zero,8b94 <__umodsi3+0x4c>
    8b7c:	1806d07a 	srli	r3,r3,1
    8b80:	11400136 	bltu	r2,r5,8b88 <__umodsi3+0x40>
    8b84:	1145c83a 	sub	r2,r2,r5
    8b88:	280ad07a 	srli	r5,r5,1
    8b8c:	183ffb1e 	bne	r3,zero,8b7c <_gp+0xffff7b54>
    8b90:	f800283a 	ret
    8b94:	f800283a 	ret
    8b98:	00c00044 	movi	r3,1
    8b9c:	003ff706 	br	8b7c <_gp+0xffff7b54>

00008ba0 <alt_getchar>:
    8ba0:	00800074 	movhi	r2,1
    8ba4:	10a3f404 	addi	r2,r2,-28720
    8ba8:	11c00217 	ldw	r7,8(r2)
    8bac:	defffe04 	addi	sp,sp,-8
    8bb0:	01000074 	movhi	r4,1
    8bb4:	01800044 	movi	r6,1
    8bb8:	d80b883a 	mov	r5,sp
    8bbc:	21240c04 	addi	r4,r4,-28624
    8bc0:	dfc00115 	stw	ra,4(sp)
    8bc4:	0008dac0 	call	8dac <altera_avalon_jtag_uart_read>
    8bc8:	0080020e 	bge	zero,r2,8bd4 <alt_getchar+0x34>
    8bcc:	d8800007 	ldb	r2,0(sp)
    8bd0:	00000106 	br	8bd8 <alt_getchar+0x38>
    8bd4:	00bfffc4 	movi	r2,-1
    8bd8:	dfc00117 	ldw	ra,4(sp)
    8bdc:	dec00204 	addi	sp,sp,8
    8be0:	f800283a 	ret

00008be4 <alt_load>:
    8be4:	deffff04 	addi	sp,sp,-4
    8be8:	01000074 	movhi	r4,1
    8bec:	01400074 	movhi	r5,1
    8bf0:	dfc00015 	stw	ra,0(sp)
    8bf4:	2123bc04 	addi	r4,r4,-28944
    8bf8:	29641304 	addi	r5,r5,-28596
    8bfc:	2140061e 	bne	r4,r5,8c18 <alt_load+0x34>
    8c00:	01000074 	movhi	r4,1
    8c04:	01400074 	movhi	r5,1
    8c08:	21200804 	addi	r4,r4,-32736
    8c0c:	29600804 	addi	r5,r5,-32736
    8c10:	2140121e 	bne	r4,r5,8c5c <alt_load+0x78>
    8c14:	00000b06 	br	8c44 <alt_load+0x60>
    8c18:	00c00074 	movhi	r3,1
    8c1c:	18e41304 	addi	r3,r3,-28596
    8c20:	1907c83a 	sub	r3,r3,r4
    8c24:	0005883a 	mov	r2,zero
    8c28:	10fff526 	beq	r2,r3,8c00 <_gp+0xffff7bd8>
    8c2c:	114f883a 	add	r7,r2,r5
    8c30:	39c00017 	ldw	r7,0(r7)
    8c34:	110d883a 	add	r6,r2,r4
    8c38:	10800104 	addi	r2,r2,4
    8c3c:	31c00015 	stw	r7,0(r6)
    8c40:	003ff906 	br	8c28 <_gp+0xffff7c00>
    8c44:	01000074 	movhi	r4,1
    8c48:	01400074 	movhi	r5,1
    8c4c:	2123a504 	addi	r4,r4,-29036
    8c50:	2963a504 	addi	r5,r5,-29036
    8c54:	2140101e 	bne	r4,r5,8c98 <alt_load+0xb4>
    8c58:	00000b06 	br	8c88 <alt_load+0xa4>
    8c5c:	00c00074 	movhi	r3,1
    8c60:	18e00804 	addi	r3,r3,-32736
    8c64:	1907c83a 	sub	r3,r3,r4
    8c68:	0005883a 	mov	r2,zero
    8c6c:	10fff526 	beq	r2,r3,8c44 <_gp+0xffff7c1c>
    8c70:	114f883a 	add	r7,r2,r5
    8c74:	39c00017 	ldw	r7,0(r7)
    8c78:	110d883a 	add	r6,r2,r4
    8c7c:	10800104 	addi	r2,r2,4
    8c80:	31c00015 	stw	r7,0(r6)
    8c84:	003ff906 	br	8c6c <_gp+0xffff7c44>
    8c88:	0008e3c0 	call	8e3c <alt_dcache_flush_all>
    8c8c:	dfc00017 	ldw	ra,0(sp)
    8c90:	dec00104 	addi	sp,sp,4
    8c94:	0008e481 	jmpi	8e48 <alt_icache_flush_all>
    8c98:	00c00074 	movhi	r3,1
    8c9c:	18e3bc04 	addi	r3,r3,-28944
    8ca0:	1907c83a 	sub	r3,r3,r4
    8ca4:	0005883a 	mov	r2,zero
    8ca8:	18bff726 	beq	r3,r2,8c88 <_gp+0xffff7c60>
    8cac:	114f883a 	add	r7,r2,r5
    8cb0:	39c00017 	ldw	r7,0(r7)
    8cb4:	110d883a 	add	r6,r2,r4
    8cb8:	10800104 	addi	r2,r2,4
    8cbc:	31c00015 	stw	r7,0(r6)
    8cc0:	003ff906 	br	8ca8 <_gp+0xffff7c80>

00008cc4 <alt_main>:
    8cc4:	deffff04 	addi	sp,sp,-4
    8cc8:	0009883a 	mov	r4,zero
    8ccc:	dfc00015 	stw	ra,0(sp)
    8cd0:	0008d880 	call	8d88 <alt_irq_init>
    8cd4:	0008da80 	call	8da8 <alt_sys_init>
    8cd8:	d1a06117 	ldw	r6,-32380(gp)
    8cdc:	d1606217 	ldw	r5,-32376(gp)
    8ce0:	d1206317 	ldw	r4,-32372(gp)
    8ce4:	dfc00017 	ldw	ra,0(sp)
    8ce8:	dec00104 	addi	sp,sp,4
    8cec:	00081241 	jmpi	8124 <main>

00008cf0 <alt_putstr>:
    8cf0:	defffe04 	addi	sp,sp,-8
    8cf4:	dc000015 	stw	r16,0(sp)
    8cf8:	dfc00115 	stw	ra,4(sp)
    8cfc:	2021883a 	mov	r16,r4
    8d00:	00089780 	call	8978 <strlen>
    8d04:	01000074 	movhi	r4,1
    8d08:	000f883a 	mov	r7,zero
    8d0c:	100d883a 	mov	r6,r2
    8d10:	800b883a 	mov	r5,r16
    8d14:	21240c04 	addi	r4,r4,-28624
    8d18:	dfc00117 	ldw	ra,4(sp)
    8d1c:	dc000017 	ldw	r16,0(sp)
    8d20:	dec00204 	addi	sp,sp,8
    8d24:	0008e081 	jmpi	8e08 <altera_avalon_jtag_uart_write>

00008d28 <write>:
    8d28:	00800044 	movi	r2,1
    8d2c:	20800226 	beq	r4,r2,8d38 <write+0x10>
    8d30:	00800084 	movi	r2,2
    8d34:	2080041e 	bne	r4,r2,8d48 <write+0x20>
    8d38:	01000074 	movhi	r4,1
    8d3c:	000f883a 	mov	r7,zero
    8d40:	21240c04 	addi	r4,r4,-28624
    8d44:	0008e081 	jmpi	8e08 <altera_avalon_jtag_uart_write>
    8d48:	d0a00817 	ldw	r2,-32736(gp)
    8d4c:	10000926 	beq	r2,zero,8d74 <write+0x4c>
    8d50:	deffff04 	addi	sp,sp,-4
    8d54:	dfc00015 	stw	ra,0(sp)
    8d58:	103ee83a 	callr	r2
    8d5c:	00c01444 	movi	r3,81
    8d60:	10c00015 	stw	r3,0(r2)
    8d64:	00bfffc4 	movi	r2,-1
    8d68:	dfc00017 	ldw	ra,0(sp)
    8d6c:	dec00104 	addi	sp,sp,4
    8d70:	f800283a 	ret
    8d74:	d0a06004 	addi	r2,gp,-32384
    8d78:	00c01444 	movi	r3,81
    8d7c:	10c00015 	stw	r3,0(r2)
    8d80:	00bfffc4 	movi	r2,-1
    8d84:	f800283a 	ret

00008d88 <alt_irq_init>:
    8d88:	deffff04 	addi	sp,sp,-4
    8d8c:	dfc00015 	stw	ra,0(sp)
    8d90:	0008e540 	call	8e54 <altera_nios2_gen2_irq_init>
    8d94:	00800044 	movi	r2,1
    8d98:	1001703a 	wrctl	status,r2
    8d9c:	dfc00017 	ldw	ra,0(sp)
    8da0:	dec00104 	addi	sp,sp,4
    8da4:	f800283a 	ret

00008da8 <alt_sys_init>:
    8da8:	f800283a 	ret

00008dac <altera_avalon_jtag_uart_read>:
    8dac:	21000017 	ldw	r4,0(r4)
    8db0:	298d883a 	add	r6,r5,r6
    8db4:	2805883a 	mov	r2,r5
    8db8:	3a10000c 	andi	r8,r7,16384
    8dbc:	11800b2e 	bgeu	r2,r6,8dec <altera_avalon_jtag_uart_read+0x40>
    8dc0:	20c00037 	ldwio	r3,0(r4)
    8dc4:	1a60000c 	andi	r9,r3,32768
    8dc8:	48000326 	beq	r9,zero,8dd8 <altera_avalon_jtag_uart_read+0x2c>
    8dcc:	10c00005 	stb	r3,0(r2)
    8dd0:	10800044 	addi	r2,r2,1
    8dd4:	003ff906 	br	8dbc <_gp+0xffff7d94>
    8dd8:	11400226 	beq	r2,r5,8de4 <altera_avalon_jtag_uart_read+0x38>
    8ddc:	1145c83a 	sub	r2,r2,r5
    8de0:	f800283a 	ret
    8de4:	403ff526 	beq	r8,zero,8dbc <_gp+0xffff7d94>
    8de8:	00000106 	br	8df0 <altera_avalon_jtag_uart_read+0x44>
    8dec:	117ffb1e 	bne	r2,r5,8ddc <_gp+0xffff7db4>
    8df0:	39d0000c 	andi	r7,r7,16384
    8df4:	3800021e 	bne	r7,zero,8e00 <altera_avalon_jtag_uart_read+0x54>
    8df8:	00bffec4 	movi	r2,-5
    8dfc:	f800283a 	ret
    8e00:	00bffd44 	movi	r2,-11
    8e04:	f800283a 	ret

00008e08 <altera_avalon_jtag_uart_write>:
    8e08:	21000017 	ldw	r4,0(r4)
    8e0c:	3005883a 	mov	r2,r6
    8e10:	298d883a 	add	r6,r5,r6
    8e14:	21c00104 	addi	r7,r4,4
    8e18:	2980072e 	bgeu	r5,r6,8e38 <altera_avalon_jtag_uart_write+0x30>
    8e1c:	38c00037 	ldwio	r3,0(r7)
    8e20:	18ffffec 	andhi	r3,r3,65535
    8e24:	183ffc26 	beq	r3,zero,8e18 <_gp+0xffff7df0>
    8e28:	28c00007 	ldb	r3,0(r5)
    8e2c:	20c00035 	stwio	r3,0(r4)
    8e30:	29400044 	addi	r5,r5,1
    8e34:	003ff806 	br	8e18 <_gp+0xffff7df0>
    8e38:	f800283a 	ret

00008e3c <alt_dcache_flush_all>:
    8e3c:	f800283a 	ret

00008e40 <alt_dev_null_write>:
    8e40:	3005883a 	mov	r2,r6
    8e44:	f800283a 	ret

00008e48 <alt_icache_flush_all>:
    8e48:	01420004 	movi	r5,2048
    8e4c:	0009883a 	mov	r4,zero
    8e50:	0008e5c1 	jmpi	8e5c <alt_icache_flush>

00008e54 <altera_nios2_gen2_irq_init>:
    8e54:	000170fa 	wrctl	ienable,zero
    8e58:	f800283a 	ret

00008e5c <alt_icache_flush>:
    8e5c:	00820004 	movi	r2,2048
    8e60:	1140012e 	bgeu	r2,r5,8e68 <alt_icache_flush+0xc>
    8e64:	100b883a 	mov	r5,r2
    8e68:	214b883a 	add	r5,r4,r5
    8e6c:	2005883a 	mov	r2,r4
    8e70:	1140032e 	bgeu	r2,r5,8e80 <alt_icache_flush+0x24>
    8e74:	1000603a 	flushi	r2
    8e78:	10800804 	addi	r2,r2,32
    8e7c:	003ffc06 	br	8e70 <_gp+0xffff7e48>
    8e80:	210007cc 	andi	r4,r4,31
    8e84:	20000126 	beq	r4,zero,8e8c <alt_icache_flush+0x30>
    8e88:	1000603a 	flushi	r2
    8e8c:	0000203a 	flushp
    8e90:	f800283a 	ret
